{
  "info": {
    "name": "Market Data Service API",
    "description": "Collection for testing Market Data Service endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Price Endpoints",
      "item": [
        {
          "name": "Get Latest Price",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has required fields\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('symbol');",
                  "    pm.expect(jsonData).to.have.property('price');",
                  "    pm.expect(jsonData).to.have.property('timestamp');",
                  "    pm.expect(jsonData).to.have.property('provider');",
                  "});",
                  "",
                  "pm.test(\"Price is a valid number\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.price).to.be.a('number');",
                  "    pm.expect(jsonData.price).to.be.above(0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/prices/latest?symbol=AAPL",
              "host": ["{{base_url}}"],
              "path": ["prices", "latest"],
              "query": [
                {
                  "key": "symbol",
                  "value": "AAPL",
                  "description": "Stock symbol"
                },
                {
                  "key": "provider",
                  "value": "alpha_vantage",
                  "description": "Data provider (optional)",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Get Latest Price - Invalid Symbol",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error message is present\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('detail');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/prices/latest?symbol=INVALID_SYMBOL_123",
              "host": ["{{base_url}}"],
              "path": ["prices", "latest"],
              "query": [
                {
                  "key": "symbol",
                  "value": "INVALID_SYMBOL_123"
                }
              ]
            }
          }
        },
        {
          "name": "Create Polling Job",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});",
                  "",
                  "pm.test(\"Response has job_id\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('job_id');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData.status).to.equal('accepted');",
                  "    ",
                  "    // Save job_id for later use",
                  "    pm.environment.set(\"job_id\", jsonData.job_id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"symbols\": [\"AAPL\", \"MSFT\", \"GOOGL\"],\n  \"interval\": 60,\n  \"provider\": \"alpha_vantage\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/prices/poll",
              "host": ["{{base_url}}"],
              "path": ["prices", "poll"]
            }
          }
        },
        {
          "name": "Get Polling Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has job details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('job_id');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData).to.have.property('config');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/prices/poll/{{job_id}}",
              "host": ["{{base_url}}"],
              "path": ["prices", "poll", "{{job_id}}"]
            }
          }
        },
        {
          "name": "Cancel Polling Job",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Job is cancelled\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.equal('cancelled');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/prices/poll/{{job_id}}",
              "host": ["{{base_url}}"],
              "path": ["prices", "poll", "{{job_id}}"]
            }
          }
        },
        {
          "name": "Get Moving Average",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has MA data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('symbol');",
                  "    pm.expect(jsonData).to.have.property('period');",
                  "    pm.expect(jsonData).to.have.property('ma_value');",
                  "    pm.expect(jsonData).to.have.property('calculated_at');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/prices/moving-average?symbol=AAPL&period=5",
              "host": ["{{base_url}}"],
              "path": ["prices", "moving-average"],
              "query": [
                {
                  "key": "symbol",
                  "value": "AAPL"
                },
                {
                  "key": "period",
                  "value": "5"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "API Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api/v1",
      "type": "string"
    }
  ]
}
